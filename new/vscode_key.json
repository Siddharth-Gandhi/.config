// Place your key bindings in this file to override the defaultsauto[]
[
  // {
  //   "key": "cmd+w",
  //   "command": "workbench.action.terminal.killEditor",
  //   "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  // },
  // {
  //   "key": "cmd+w",
  //   "command": "-workbench.action.terminal.killEditor",
  //   "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  // },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "shift+alt+enter",
    "command": "jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "jupyter.runByLineStop",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runByLineStop",
    "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'"
  },
  {
    "key": "alt+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+alt+cmd+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "explorerViewletFocus"
  },
  {
    "key": "shift+cmd+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.openLastEditorInGroup"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  // {
  //   "key": "cmd+6",
  //   "command": "workbench.action.openEditorAtIndex6"
  // },
  // {
  //   "key": "cmd+7",
  //   "command": "workbench.action.openEditorAtIndex7"
  // },
  // {
  //   "key": "cmd+8",
  //   "command": "workbench.action.openEditorAtIndex8"
  // },
  // {
  //   "key": "cmd+9",
  //   "command": "workbench.action.openEditorAtIndex9"
  // },
  // {
  //   "key": "ctrl+shift+1",
  //   "command": "workbench.action.focusFirstEditorGroup"
  // },
  // {
  //   "key": "ctrl+shift+2",
  //   "command": "workbench.action.focusSecondEditorGroup"
  // },
  // {
  //   "key": "ctrl+3",
  //   "command": "workbench.action.focusThirdEditorGroup"
  // },
  {
    "key": "ctrl+c",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift shift",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "shift shift",
    "command": "goToNextReference",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "shift shift",
    "command": "editor.gotoNextSymbolFromResult",
    "when": "hasSymbols"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.debug.action.toggleRepl",
    "when": " inDebugMode"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "alt+cmd+r",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "shift+cmd+c",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "-quitControl.keybindings.closeWindow"
  },
  {
    "key": "shift+cmd+c",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+c",
    "command": "toggleSearchCaseSensitive",
    "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "alt+cmd+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+cmd+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+c",
    "command": "workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
    "key": "alt+cmd+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
  },
  {
      "key": "ctrl+w",
      "command": "extension.multiCommand.execute",
      "args": {
          "command": "multiCommand.closeEditorFocusLeft"
      },
      "when": "editorFocus && !(activeEditorGroupIndex != '1' || activeEditorGroupLast)"
  },
  {
      "key": "ctrl+w",
      "command": "extension.multiCommand.execute",
      "args": {
          "command": "multiCommand.closeEditorOnly"
      },
      "when": "editorFocus && (activeEditorGroupIndex == '1' || activeEditorGroupLast)"
  },
  {
      "key": "ctrl+w",
      "command": "-workbench.action.switchWindow"
  },
  {
      "key": "cmd+w",
      "command": "extension.multiCommand.execute",
      "args": {
          "command": "multiCommand.closeEditorFocusLeft"
      },
      "when": "editorFocus && !(activeEditorGroupIndex != '1' || activeEditorGroupLast)"
  },
  {
      "key": "cmd+w",
      "command": "extension.multiCommand.execute",
      "args": {
          "command": "multiCommand.closeEditorOnly"
      },
      "when": "editorFocus && (activeEditorGroupIndex == '1' || activeEditorGroupLast)"
  },
  {
      "key": "cmd+w",
      "command": "-workbench.action.switchWindow"
  },
  {
    "key": "cmd+w",
    "command": "-quitControl.keybindings.closeWindow",
    "when": "config.quitControl.closeTabShouldTryToCloseEmptyWindow && !editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+cmd+r",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "shift+enter",
    "command": "-python.execInREPL",
    "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
  },
  {
    "key": "shift+cmd+s",
    "command": "toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+cmd+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.terminal.focusNext",
    "when": "editorFocus | terminalFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus | editorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+-",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  }
]